// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Device device
//
// swagger:model Device
type Device struct {

	// Whether the device has been approved to connect to IoT Central.
	Approved bool `json:"approved,omitempty"`

	// Display name of the device.
	DisplayName string `json:"displayName,omitempty"`

	// ETag used to prevent conflict in device updates.
	Etag string `json:"etag,omitempty"`

	// Unique ID of the device.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The device template definition for the device.
	InstanceOf string `json:"instanceOf,omitempty"`

	// Whether resources have been allocated for the device.
	// Read Only: true
	Provisioned *bool `json:"provisioned,omitempty"`

	// Whether the device is simulated.
	Simulated bool `json:"simulated,omitempty"`
}

// Validate validates this device
func (m *Device) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Device) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Device) UnmarshalBinary(b []byte) error {
	var res Device
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
